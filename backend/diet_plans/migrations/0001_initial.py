# Generated by Django 4.2.7 on 2025-09-09 10:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('calories_per_100g', models.FloatField(help_text='Calories per 100 grams')),
                ('protein_per_100g', models.FloatField(default=0, help_text='Protein in grams per 100g')),
                ('carbs_per_100g', models.FloatField(default=0, help_text='Carbohydrates in grams per 100g')),
                ('fat_per_100g', models.FloatField(default=0, help_text='Fat in grams per 100g')),
                ('fiber_per_100g', models.FloatField(default=0, help_text='Fiber in grams per 100g')),
                ('category', models.CharField(blank=True, help_text='Food category (e.g., vegetables, fruits, grains)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GenerateMeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('meal_type', models.CharField(choices=[('Regular', 'Regular'), ('Ramadan', 'Ramadan')], max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('ai_generated_data', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_meals', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserMealProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_round', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('new_weight', models.FloatField(help_text='Weight in kg')),
                ('new_height', models.FloatField(help_text='Height in cm')),
                ('goal', models.CharField(choices=[('weight_loss', 'Weight Loss'), ('muscle_gain', 'Muscle Gain'), ('maintenance', 'Maintenance')], max_length=255)),
                ('generated_meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_profiles', to='diet_plans.generatemeal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ToDoList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal', models.TextField()),
                ('day', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('meal_time', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Snacks', 'Snacks')], max_length=50)),
                ('date_of_meal', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todo_lists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
